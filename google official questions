Q. あなたの会社は、お客様に関するデータを収集してお客様の健康状態を定期的にチェックしています。お客様は世界中に数百万人います。データは、ユーザーあたり 10 秒ごとに 2 つのイベントという平均レートで取り込まれますが、データをユーザーごとに Bigtable で可視化できるようにする必要があります。オペレーションのパフォーマンスが高くなるように Bigtable キーを作成する必要がありますが、どうすればよいですか。
- キーを user-id#device-id#activity-id#timestamp として作成します。
- キーを timestamp#user-id#device-id#activity-id として作成します。
- キーを timestamp#device-id#activity-id#user-id として作成します。
- キーを user-id#timestamp#device-id#activity-id として作成します。

A. Bigtable のパフォーマンスを最大限に引き出すには、行キーの設計が非常に重要です。キーは、書き込みがクラスター全体に均等に分散され（ホットスポッティングの回避）、かつ一般的な読み取りリクエストが効率的に行えるように設計する必要があります。
本問題における要件は2つ。
- 高い書き込みパフォーマンスの維持: 大量のデータを継続的に取り込むため、書き込みが特定のサーバーノードに集中する「ホットスポッティング」を避ける必要があります。→ user-idが先頭。
- ユーザーごとの効率的なデータ可視化: 特定のユーザーのデータを素早く読み取れる必要があります。→ この設計では、特定のユーザーのデータがすべて連続したブロックに格納されており、さらにタイムスタンプ順にソートされています。これにより、特定のユーザーの時系列データを非常に高速に取得できます。

Q. あなたの会社は、BigQuery の知識がないビジネス アナリストを数人雇用していますが、今後、彼らは BigQuery を使用して大量のデータを分析する予定です。あなたは、BigQuery でのコスト管理を行い、クエリ結果の品質を維持しつつ予算が超過しないようにする必要があります。どうすればよいですか。
A. プロジェクト レベルまたはユーザーレベルでカスタマイズした 1 日の割り当てを許容できる値に設定します。
B. BigQuery テーブルのデータを減らしてアナリストがクエリするデータ量を減らしてから、残りのデータをアーカイブします。
C. クエリ検証ツールまたは --dry_run を使用して費用を見積もれるようにアナリストをトレーニングし、アナリストが使用量を自身で制御できるようにします。
D. 各アナリストに対し BigQuery の 1 日あたりの費用をエクスポートして Looker でデータを可視化し、アナリストが使用量を自身で制御できるようにします。

A. 予算超過を確実に防ぐためには、システム側で強制的な上限を設定する選択肢Aが最も適切。Bは使用する分析対象データ削除に該当するので不適切。Cは費用の管理がアナリスト依存で不適切。Dは事後対策になっているので不適切。

Q. 最近、Bigtable データベースが本番環境にデプロイされ、取り込まれて分析されるデータ規模が大幅に増大しましたが、パフォーマンスが低下しました。パフォーマンスの問題を特定するにはどうすればよいですか。
A. Key Visualizer を使用してパフォーマンスを分析します。
B. Cloud Trace を使用してパフォーマンスの問題を特定します。
C. ログ ステートメントをコードに追加して、どの挿入が遅延の原因か調べます。
D. クラスタにノードをさらに追加して、パフォーマンスの問題が解消されるか確認します。

A. 
